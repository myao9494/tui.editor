{"version":3,"file":"index.js","sources":["../src/options-schema.js","../src/utils/p-exec.js","../node_modules/is-extglob/index.js","../node_modules/is-glob/index.js","../src/actions/copy.js","../src/actions/move.js","../src/actions/delete.js","../src/actions/mkdir.js","../src/actions/archive.js","../src/index.js"],"sourcesContent":["export default {\n  title: 'FileManagerPluginOptions',\n  type: 'object',\n  additionalProperties: false,\n  definitions: {\n    Copy: {\n      description: 'Copy individual files or entire directories from a source folder to a destination folder',\n      type: 'array',\n      minItems: 1,\n      additionalItems: true,\n      itmes: [\n        {\n          type: 'object',\n          additionalProperties: false,\n          properties: {\n            source: {\n              description: 'Copy source. A file or directory or a glob',\n              type: 'string',\n              minLength: 1,\n            },\n            destination: {\n              description: 'Copy destination',\n              type: 'string',\n              minLength: 1,\n            },\n          },\n        },\n      ],\n    },\n    Delete: {\n      description: 'Delete individual files or entire directories',\n      type: 'array',\n      minItems: 1,\n      additionalItems: true,\n      items: {\n        anyOf: [\n          {\n            type: 'object',\n            additionalProperties: false,\n            properties: {\n              source: {\n                type: 'string',\n                minLength: 1,\n              },\n              options: {\n                additionalProperties: true,\n                type: 'object',\n                description: 'Options to forward to del',\n              },\n            },\n          },\n          {\n            type: 'string',\n            minLength: 1,\n          },\n        ],\n      },\n    },\n    Move: {\n      description: 'Move individual files or entire directories from a source folder to a destination folder',\n      type: 'array',\n      additionalItems: true,\n      items: [\n        {\n          type: 'object',\n          additionalProperties: false,\n          properties: {\n            source: {\n              description: 'Move source. A file or directory or a glob',\n              type: 'string',\n              minLength: 1,\n            },\n            destination: {\n              description: 'Move destination',\n              type: 'string',\n              minLength: 1,\n            },\n          },\n        },\n      ],\n    },\n    Mkdir: {\n      description: 'Create Directories',\n      type: 'array',\n      minItems: 1,\n      additionalItems: true,\n      items: {\n        type: 'string',\n      },\n    },\n    Archive: {\n      description: 'Archive individual files or entire directories.',\n      type: 'array',\n      additionalItems: true,\n      items: [\n        {\n          type: 'object',\n          additionalProperties: false,\n          properties: {\n            source: {\n              description: 'Source. A file or directory or a glob',\n              type: 'string',\n              minLength: 1,\n            },\n            destination: {\n              description: 'Archive destination',\n              type: 'string',\n              minLength: 1,\n            },\n            format: {\n              type: 'string',\n              enum: ['zip', 'tar'],\n            },\n            options: {\n              additionalProperties: true,\n              type: 'object',\n              description: 'Options to forward to archiver',\n            },\n          },\n        },\n      ],\n    },\n    Actions: {\n      type: 'object',\n      additionalProperties: false,\n      properties: {\n        copy: {\n          $ref: '#/definitions/Copy',\n        },\n        delete: {\n          $ref: '#/definitions/Delete',\n        },\n        move: {\n          $ref: '#/definitions/Move',\n        },\n        mkdir: {\n          $ref: '#/definitions/Mkdir',\n        },\n        archive: {\n          $ref: '#/definitions/Archive',\n        },\n      },\n    },\n  },\n  properties: {\n    events: {\n      type: 'object',\n      additionalProperties: false,\n      properties: {\n        onStart: {\n          oneOf: [\n            {\n              $ref: '#/definitions/Actions',\n            },\n            {\n              type: 'array',\n              items: {\n                $ref: '#/definitions/Actions',\n              },\n            },\n          ],\n        },\n        onEnd: {\n          oneOf: [\n            {\n              $ref: '#/definitions/Actions',\n            },\n            {\n              type: 'array',\n              items: {\n                $ref: '#/definitions/Actions',\n              },\n            },\n          ],\n        },\n      },\n    },\n    runTasksInSeries: {\n      type: 'boolean',\n      default: false,\n      description: 'Run tasks in an action in series',\n    },\n    context: {\n      type: 'string',\n      description: 'The directory, an absolute path, for resolving files. Defaults to webpack context',\n    },\n  },\n};\n","const defaultTask = async () => {};\n\nconst pExec = async (series = false, arr = [], task = defaultTask) => {\n  if (series) {\n    await arr.reduce(async (p, spec) => {\n      await p;\n      return task(spec);\n    }, Promise.resolve(null));\n    return;\n  }\n\n  const pMap = arr.map(async (spec) => await task(spec));\n  await Promise.all(pMap);\n};\n\nexport default pExec;\n","/*!\n * is-extglob <https://github.com/jonschlinkert/is-extglob>\n *\n * Copyright (c) 2014-2016, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nmodule.exports = function isExtglob(str) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  var match;\n  while ((match = /(\\\\).|([@?!+*]\\(.*\\))/g.exec(str))) {\n    if (match[2]) return true;\n    str = str.slice(match.index + match[0].length);\n  }\n\n  return false;\n};\n","/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictRegex = /\\\\(.)|(^!|\\*|[\\].+)]\\?|\\[[^\\\\\\]]+\\]|\\{[^\\\\}]+\\}|\\(\\?[:!=][^\\\\)]+\\)|\\([^|]+\\|[^\\\\)]+\\))/;\nvar relaxedRegex = /\\\\(.)|(^!|[*?{}()[\\]]|\\(\\?)/;\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var regex = strictRegex;\n  var match;\n\n  // optionally relax regex\n  if (options && options.strict === false) {\n    regex = relaxedRegex;\n  }\n\n  while ((match = regex.exec(str))) {\n    if (match[2]) return true;\n    var idx = match.index + match[0].length;\n\n    // if an open bracket/brace/paren is escaped,\n    // set the index to the next closing character\n    var open = match[1];\n    var close = open ? chars[open] : null;\n    if (open && close) {\n      var n = str.indexOf(close, idx);\n      if (n !== -1) {\n        idx = n + 1;\n      }\n    }\n\n    str = str.slice(idx);\n  }\n  return false;\n};\n","import fs from 'fs';\nimport path from 'path';\n\nimport fsExtra from 'fs-extra';\nimport cpy from 'cpy';\nimport isGlob from 'is-glob';\n\nimport pExec from '../utils/p-exec';\n\nconst fsExtraDefaultOptions = {\n  preserveTimestamps: true,\n};\n\nconst copy = async (task, { logger }) => {\n  const { source, absoluteSource, destination, absoluteDestination, context, toType } = task;\n\n  logger.log(`copying from ${source} to ${destination}`);\n\n  if (isGlob(source)) {\n    const src = path.isAbsolute(source) ? source : path.posix.join(context, source);\n    await cpy(src, absoluteDestination);\n  } else {\n    const isSourceFile = fs.lstatSync(absoluteSource).isFile();\n\n    // if source is a file and target is a directory\n    // create the directory and copy the file into that directory\n    if (isSourceFile && toType === 'dir') {\n      await fsExtra.ensureDir(absoluteDestination);\n\n      const sourceFileName = path.basename(absoluteSource);\n      const filePath = path.resolve(absoluteDestination, sourceFileName);\n\n      await fsExtra.copy(absoluteSource, filePath, fsExtraDefaultOptions);\n      return;\n    }\n\n    await fsExtra.copy(absoluteSource, absoluteDestination, fsExtraDefaultOptions);\n  }\n\n  logger.info(`copied \"${source}\" to \"${destination}`);\n};\n\nconst copyAction = async (tasks, options) => {\n  const { runTasksInSeries, logger } = options;\n\n  const taskOptions = {\n    logger,\n  };\n\n  logger.debug(`processing copy tasks. tasks: ${tasks}`);\n\n  await pExec(runTasksInSeries, tasks, async (task) => {\n    try {\n      await copy(task, taskOptions);\n    } catch (err) {\n      logger.error(`error while copying. task ${err}`);\n    }\n  });\n  logger.debug(`copy tasks complete. tasks: ${tasks}`);\n};\n\nexport default copyAction;\n","import fsExtra from 'fs-extra';\n\nimport pExec from '../utils/p-exec';\n\nconst moveAction = async (tasks, options) => {\n  const { runTasksInSeries, logger } = options;\n\n  logger.debug(`processing move tasks. tasks: ${tasks}`);\n\n  await pExec(runTasksInSeries, tasks, async (task) => {\n    try {\n      await fsExtra.move(task.absoluteSource, task.absoluteDestination);\n      logger.info(`moved ${task.source} to ${task.destination}`);\n    } catch (err) {\n      logger.error(`unable to move ${task.source}, ${err}`);\n    }\n  });\n\n  logger.debug(`move tasks complete. tasks: ${tasks}`);\n};\n\nexport default moveAction;\n","import del from 'del';\n\nimport pExec from '../utils/p-exec';\n\nconst deleteAction = async (tasks, taskOptions) => {\n  const { runTasksInSeries, logger } = taskOptions;\n\n  logger.debug(`processing delete tasks. tasks: ${tasks}`);\n\n  await pExec(runTasksInSeries, tasks, async (task) => {\n    const { options = {} } = task;\n\n    try {\n      await del(task.absoluteSource, options);\n      logger.info(`deleted ${task.source}`);\n    } catch (err) {\n      logger.error(`unable to delete ${task.source}. ${err}`);\n    }\n  });\n\n  logger.debug(`delete tasks complete. tasks: ${tasks}`);\n};\n\nexport default deleteAction;\n","import fs from 'fs';\n\nimport pExec from '../utils/p-exec';\n\nconst mkdirAction = async (tasks, options) => {\n  const { runTasksInSeries, logger } = options;\n\n  logger.debug(`processing mkdir tasks. tasks: ${tasks}`);\n\n  await pExec(runTasksInSeries, tasks, async (task) => {\n    try {\n      await fs.promises.mkdir(task.absoluteSource, { recursive: true });\n      logger.info(`created directory. ${task.source}`);\n    } catch (err) {\n      logger.error(`unable to create direcotry: ${task.source}. ${err}`);\n    }\n  });\n\n  logger.debug(`mkdir tasks complete. tasks: ${tasks}`);\n};\n\nexport default mkdirAction;\n","import fs from 'fs';\nimport path from 'path';\n\nimport archiver from 'archiver';\nimport isGlob from 'is-glob';\nimport fsExtra from 'fs-extra';\n\nimport pExec from '../utils/p-exec';\n\nconst archive = async (task, { logger }) => {\n  const { source, absoluteSource, absoluteDestination, options = {}, context } = task;\n  const format = task.format || path.extname(absoluteDestination).replace('.', '');\n\n  // Exclude destination file from archive\n  const destFile = path.basename(absoluteDestination);\n  const destDir = path.dirname(absoluteDestination);\n\n  const ignore = ((Array.isArray(options.ignore) && options.ignore) || []).concat(destFile);\n  const archiverOptions = { ignore, ...(options.globOptions || {}) };\n\n  await fsExtra.ensureDir(destDir);\n\n  const output = fs.createWriteStream(absoluteDestination);\n  const archive = archiver(format, options);\n  archive.pipe(output);\n\n  logger.log(`archiving src ${source}`);\n\n  if (isGlob(source)) {\n    const opts = {\n      ...archiverOptions,\n      cwd: context,\n    };\n\n    await archive.glob(source, opts).finalize();\n  } else {\n    const sStat = fs.lstatSync(absoluteSource);\n\n    if (sStat.isDirectory()) {\n      const opts = {\n        ...archiverOptions,\n        cwd: absoluteSource,\n      };\n\n      await archive.glob('**/*', opts).finalize();\n    }\n\n    if (sStat.isFile()) {\n      const opts = {\n        name: path.basename(source),\n      };\n\n      await archive.file(absoluteSource, opts).finalize();\n    }\n  }\n\n  logger.info(`archive created at \"${absoluteDestination}\"`);\n};\n\nconst archiveAction = async (tasks, options) => {\n  const { runTasksInSeries, logger } = options;\n\n  const taskOptions = {\n    logger,\n  };\n\n  logger.debug(`processing archive tasks. tasks: ${tasks}`);\n  await pExec(runTasksInSeries, tasks, async (task) => {\n    try {\n      await archive(task, taskOptions);\n    } catch (err) {\n      logger.error(`error while creating archive. task ${task}`);\n    }\n  });\n  logger.debug(`archive tasks complete. tasks: ${tasks}`);\n};\n\nexport default archiveAction;\n","import path from 'path';\n\nimport { validate } from 'schema-utils';\n\nimport optionsSchema from './options-schema';\nimport pExec from './utils/p-exec';\nimport { copyAction, moveAction, mkdirAction, archiveAction, deleteAction } from './actions';\n\nconst PLUGIN_NAME = 'FileManagerPlugin';\n\nconst defaultOptions = {\n  events: {\n    onStart: [],\n    onEnd: [],\n  },\n  runTasksInSeries: false,\n  context: null,\n};\n\nconst resolvePaths = (action, context) => {\n  return action.map((task) => {\n    if (typeof task === 'string') {\n      const source = task;\n      return {\n        source,\n        absoluteSource: path.isAbsolute(source) ? source : path.join(context, source),\n      };\n    }\n\n    const { source, destination } = task;\n\n    if (!destination) {\n      return {\n        ...task,\n        source,\n        absoluteSource: path.isAbsolute(source) ? source : path.join(context, source),\n      };\n    }\n\n    const toType = /(?:\\\\|\\/)$/.test(destination) ? 'dir' : 'file';\n\n    return {\n      ...task,\n      source,\n      absoluteSource: path.isAbsolute(source) ? source : path.join(context, source),\n      destination,\n      absoluteDestination: path.isAbsolute(destination) ? destination : path.join(context, destination),\n      toType,\n      context,\n    };\n  });\n};\n\nclass FileManagerPlugin {\n  constructor(options) {\n    validate(optionsSchema, options, {\n      name: PLUGIN_NAME,\n      baseDataPath: 'actions',\n    });\n\n    this.options = { ...defaultOptions, ...options };\n  }\n\n  async applyAction(action, actionParams) {\n    const opts = {\n      runTasksInSeries: this.options.runTasksInSeries,\n      logger: this.logger,\n    };\n\n    await action(resolvePaths(actionParams, this.context), opts);\n  }\n\n  async run(event) {\n    for (const actionType in event) {\n      const action = event[actionType];\n\n      switch (actionType) {\n        case 'delete':\n          await this.applyAction(deleteAction, action);\n          break;\n\n        case 'mkdir':\n          await this.applyAction(mkdirAction, action);\n          break;\n\n        case 'copy':\n          await this.applyAction(copyAction, action);\n          break;\n\n        case 'move':\n          await this.applyAction(moveAction, action);\n          break;\n\n        case 'archive':\n          await this.applyAction(archiveAction, action);\n          break;\n\n        default:\n          throw Error('Unknown action');\n      }\n    }\n  }\n\n  async execute(eventName) {\n    const { events } = this.options;\n\n    if (Array.isArray(events[eventName])) {\n      const eventsArr = events[eventName];\n\n      await pExec(true, eventsArr, async (event) => await this.run(event));\n      return;\n    }\n\n    const event = events[eventName];\n    await this.run(event);\n  }\n\n  apply(compiler) {\n    this.context = this.options.context || compiler.options.context;\n    this.logger = compiler.getInfrastructureLogger(PLUGIN_NAME);\n\n    const onStart = async () => {\n      await this.execute('onStart');\n    };\n\n    const onEnd = async () => {\n      await this.execute('onEnd');\n    };\n\n    compiler.hooks.beforeRun.tapPromise(PLUGIN_NAME, onStart);\n    compiler.hooks.watchRun.tapPromise(PLUGIN_NAME, onStart);\n    compiler.hooks.afterEmit.tapPromise(PLUGIN_NAME, onEnd);\n  }\n}\n\nexport default FileManagerPlugin;\n"],"names":["title","type","additionalProperties","definitions","Copy","description","minItems","additionalItems","itmes","properties","source","minLength","destination","Delete","items","anyOf","options","Move","Mkdir","Archive","format","enum","Actions","copy","$ref","delete","move","mkdir","archive","events","onStart","oneOf","onEnd","runTasksInSeries","default","context","defaultTask","pExec","series","arr","task","reduce","p","spec","Promise","resolve","pMap","map","all","isExtglob","str","match","exec","slice","index","length","chars","strictRegex","relaxedRegex","isGlob","regex","strict","idx","open","close","n","indexOf","fsExtraDefaultOptions","preserveTimestamps","logger","absoluteSource","absoluteDestination","toType","log","src","path","isAbsolute","posix","join","cpy","isSourceFile","fs","lstatSync","isFile","fsExtra","ensureDir","sourceFileName","basename","filePath","info","copyAction","tasks","taskOptions","debug","err","error","moveAction","deleteAction","del","mkdirAction","promises","recursive","extname","replace","destFile","destDir","dirname","ignore","Array","isArray","concat","archiverOptions","globOptions","output","createWriteStream","archiver","pipe","opts","cwd","glob","finalize","sStat","isDirectory","name","file","archiveAction","PLUGIN_NAME","defaultOptions","resolvePaths","action","test","FileManagerPlugin","constructor","validate","optionsSchema","baseDataPath","applyAction","actionParams","run","event","actionType","Error","execute","eventName","eventsArr","apply","compiler","getInfrastructureLogger","hooks","beforeRun","tapPromise","watchRun","afterEmit"],"mappings":"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"}